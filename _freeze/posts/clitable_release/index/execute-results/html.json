{
  "hash": "501a66e1dbb744d5d81bbc965c787fd2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"clitable: a new R package to easily print pretty tables in the terminal\"\nauthor: \"Karl Forner\"\ndate: \"2025-10-16\"\ncategories: [R, dev]\nimage: \"clitable.png\"\ntoc: true\n---\n\n\n\nI am pleased to announce that [clitable](https://github.com/kforner/clitable), my new R package for printing tables in the terminal, just made its way to the [CRAN](https://cran.r-project.org/web/packages/clitable/index.html)!!\nIt lets you print pretty colorful tables directly in the R console or terminal.\n\nI am also quite proud that it was accepted on its first submission, without anything to fix, which is in my experience\nnot that common, and is also the subject of my previous post [Preparing Rfuzzycoco for publication on CRAN](../preparing_rfuzzycoco_for_cran/index.html). The average time for a CRAN submission review is a week, so imagine the delay\nif you have to resubmit 4 or 5 times. This was made possible by a combination of tools and good practices (and experience): devtools, testthat, roxygen2, covr, git, github actions (CI), rhub, pkgdown, codecov...\n\n\nAnd once again, my package has **100% test coverage** ![coverage badge](coverage.svg) (and yes it's overkill but I am a \nTest addict...).\n\nSo what is it for ? For pretty printing tables (data frames, matrices) in the terminal, like this:\n![a clitable example](clitable.png) \n\nIn this example, you can see:\n\n  - column headers, rendered in **bold**\n  - columns with adequate size\n  - 2 highlighted rows (in green)\n  - NA values rendered with a custom style, **strikethrough**\n  - the **flipper_len** column with a **heatmap** background\n  - the first value, in cell (1, 1) using a custom [crayon](https://r-lib.github.io/crayon/) style\n\nThe corresponding code is:\n\n::: {.cell}\n\n```{.r .cell-code}\n  # the table to print\n  df <- head(datasets::penguins, 20)\n\n  # custom crayon style \n  df$species <- as.character(df$species)\n  df[1, 1] <- crayon::style(\"ADELIE\", \"underline\",\"bgYellow\")\n\n  # create clitable\n  ct <- cli_table(df, header_style = \"bold\",\n    NA_style = \"strikethrough\",\n    heatmap_columns = list(\"flipper_len\"), xmin = 180, xmax = 200,\n    hilite_rows = !is.na(df$sex) & df$sex == \"female\" & df$bill_dep >= 19, \n    hilite_style = \"bgGreen\"\n  )\n\n  # print it\n  cat(ct, sep = \"\\n\")\n}\n```\n:::\n\nNote that this is my most complex example.\n\n\nYou may ask, **why would I want to print a table in the terminal??** In R we have multiple ways to render pretty tables in \nhtml, pdf, images.\n\nMy personal use case if for the next version of a package of mine, [srcpkgs](https://kforner.github.io/srcpkgs/), which\ncan render the results of testing or checking a collection of R source packages as multiple tables in the terminal.\nI need to **highlight** the rows that correspond to errors and to print the **elapsed time** column as a heatmap to quickly\nidentify bottlenecks. I also wanted to make it compatible with the amazing [crayon](https://r-lib.github.io/crayon/) and \n[cli](https://r-lib.github.io/cli/) packages, so that it is easy to customize the output.\n\nAnother use case I foresee is for logging some results. The [cli](https://r-lib.github.io/cli/) package is really useful\nfor that, but seems to be missing an easy way to print tables, hence clitable!\n\nYou may also ask, **aren't there other R packages that can render pretty tables as text??**\nThere are indeed. For example I have used a lot the [huxtable](https://hughjonesd.github.io/huxtable/) package, that is\nreally powerful, and can render tables in LaTeX, HTML, text. But using it for my purpose is not that straightforward,\nto the extent of my knowledge it is not compatible with [cli](https://r-lib.github.io/cli/), and it has a lot of dependencies.\nIn comparison, [clitable](https://github.com/kforner/clitable) is a dwarf, but has minimal dependencies (`crayon`/`cli`),\nis easy to use and easy to extend, and intended to work well with cli.\nNote that this is the very first version, and the interface can evolve if needed.\n\nFeedback and contributions are welcome on GitHub.\n\n\nHere are some more examples, part of `clitable::demo()`\n\n![some styles](styles1.png)\n![more styles](styles2.png)\n![heatmaps](heatmaps.png)\n![hilite](hilite.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}